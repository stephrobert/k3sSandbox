- name: Deploy K3s on Master(s) Node(s)
  hosts: master
  gather_facts: true
  become: true
  vars:
    home: "{{ lookup('env','HOME') }}"
    user: "{{ lookup('env','USER') }}"
  tasks:
    - name: Add Kubernetes GPG key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
        dest: /etc/apt/trusted.gpg.d/kubernetes.asc

        mode: ugo+rw
    - name: Add repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes.asc] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present
        filename: kuberentes
        update_cache: true
        mode: "0644"
        validate_certs: false
    - name: Install packages
      ansible.builtin.package:
        name:
          - kubectl
        state: present
    - name: Create folder for certificates
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/tls
        mode: "0755"
        owner: root
        group: root
        state: directory
    - name: Copy certificates
      ansible.builtin.copy:
        dest: /var/lib/rancher/k3s/server/tls/root-ca.pem
        src: "{{ home }}/.local/share/mkcert/rootCA.pem"
        owner: root
        group: root
        mode: "0644"
    - name: Copy certificates
      ansible.builtin.copy:
        dest: /var/lib/rancher/k3s/server/tls/root-ca.key
        src: "{{ home }}/.local/share/mkcert/rootCA-key.pem"
        owner: root
        group: root
        mode: "0644"
    - name: Create folder .kube
      ansible.builtin.file:
        dest: /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode: "0700"
    - name: Check k3s service exist
      ansible.builtin.service_facts:
    - name: Install k3s
      become: false
      ansible.builtin.shell:
        cmd: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="v1.27.9+k3s1" sh -
      when: services['k3s.service'] is not defined
    - name: Check k3s service exist
      ansible.builtin.service_facts:
    - name: Wait until node token is generated
      ansible.builtin.wait_for:
        path: /var/lib/rancher/k3s/server/node-token
      when: services['k3s.service'] is defined
    - name: Obtain token
      ansible.builtin.fetch:
        src: /var/lib/rancher/k3s/server/node-token
        dest: /tmp/node-token
        flat: true
      when: services['k3s.service'] is defined
    - name: Get k3s conf
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /tmp/config
        flat: true
    - name: Copy conf to .kube/config
      ansible.builtin.copy:
        src: /tmp/config
        dest: .kube/config
        mode: "0600"
        group: vagrant
        owner: vagrant
    - name: Copy conf to .kube/config to localhost
      ansible.builtin.copy:
        src: /tmp/config
        dest: "{{ home }}/.kube/k3s"
        mode: "0600"
        group: "{{ user }}"
        owner: "{{ user }}"
      delegate_to: localhost
      become: false
    - name: Get IP of master node
      ansible.builtin.set_fact:
        ip: "{{ (ansible_facts.all_ipv4_addresses | select('match', '192.168.121') | list)[0] }}"
    - name: Change IP conf to .kube/config to localhost
      ansible.builtin.lineinfile:
        path: "{{ home }}/.kube/k3s"
        regex: "^    server: https://127.0.0.1:6443"
        line: "    server: https://{{ ip }}:6443"
        group: "{{ user }}"
        owner: "{{ user }}"
      delegate_to: localhost
      become: false
